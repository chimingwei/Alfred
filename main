#!/usr/bin/env python
import Adafruit_BBIO.GPIO as GPIO
from ctypes import cdll
import uinput
import gflags
import httplib2
import urllib2
import json
import time
import sys
from os import system

from datetime import datetime

######## DEFINES ########


######### SETUP #########
device = uinput.Device([
        uinput.KEY_Y,
        uinput.KEY_Z,
	])


GPIO.setup("P8_10", GPIO.IN)
GPIO.setup("P8_10", GPIO.IN)

recognizer = cdll.LoadLibrary('./librecog.so')
recognizer.init()


######### CODE ###########
#recognizer.add_user('taylor')
print "Waiting for user."
#GPIO.wait_for_edge("P8_10", GPIO.RISING)
print "User Detected."
#detectedUser = recognizer.predict()
#print("User: "detectedUser)
if sys.argv[1] != '-1':
        f = open('./'+sys.argv[1]+'.json')
        jsonf = json.loads(f.read())
        system('curl -H "Authorization: Bearer ' + jsonf["access_token"] + '" https://www.googleapis.com/calendar/v3/calendars/primary/events >> data.json')
else:
        system('rm auth.json')
        print "Requesting token"
        system('curl -d "client_id=805034040388-3d7m4m13o75ar9heq5se3u2n60eib9aq.apps.googleusercontent.com&scope=email https://www.googleapis.com/auth/calendar.readonly" https://accounts.google.com/o/oauth2/device/code >> auth.json')
        f = open('auth.json')
        jsonf = json.loads(f.read())
        f.close()
        system('curl -d "client_id=805034040388-3d7m4m13o75ar9heq5se3u2n60eib9aq.apps.googleusercontent.com&client_secret=cYpuaguhAvudT7JdYxHNW35p&code='+jsonf["device_code"]+'&grant_type=http://oauth.net/grant_type/device/1.0" https://www.googleapis.com/oauth2/v3/token >> tmp.json')
        r = open('tmp.json')
        jsonr = json.loads(r.read())
        while jsonr["error"]:
                time.sleep(5) 
                system('rm tmp.json && curl -d "client_id=805034040388-3d7m4m13o75ar9heq5se3u2n60eib9aq.apps.googleusercontent.com&client_secret=cYpuaguhAvudT7JdYxHNW35p&code='+jsonf["device_code"]+'&grant_type=http://oauth.net/grant_type/device/1.0" https://www.googleapis.com/oauth2/v3/token >> tmp.json')
                r = open('tmp.json')
                jsonr = json.loads(r.read()) 
                r.close()

device.emit_click(uinput.KEY_Z)
GPIO.wait_for_edge("P8_11", GPIO.RISING)
device.emit_click(uinput.KEY_Y)
system('rm data.json')
